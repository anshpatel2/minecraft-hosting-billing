version: '3.8'

services:
  # Web Server & PHP
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: minecraft-hosting-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/sites-available/default
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs
    networks:
      - minecraft-hosting
    depends_on:
      - mysql
      - redis

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: minecraft-hosting-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/ssl:/etc/ssl/certs
    networks:
      - minecraft-hosting
    depends_on:
      - app

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: minecraft-hosting-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf
    ports:
      - "3306:3306"
    networks:
      - minecraft-hosting

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: minecraft-hosting-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - minecraft-hosting

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: minecraft-hosting-queue
    restart: unless-stopped
    command: php artisan queue:work --sleep=3 --tries=3 --daemon
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - minecraft-hosting
    depends_on:
      - app
      - mysql
      - redis

  # Cron Scheduler
  scheduler:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: minecraft-hosting-scheduler
    restart: unless-stopped
    command: /bin/bash -c "while true; do php artisan schedule:run; sleep 60; done"
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - minecraft-hosting
    depends_on:
      - app
      - mysql
      - redis

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  minecraft-hosting:
    driver: bridge
